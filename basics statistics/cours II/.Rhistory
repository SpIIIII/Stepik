setwd('~/Programming/Stepik/basics statistics/cours II')
#================
# 2.8.8
test_data <- read.csv("https://stepic.org/media/attachments/course/524/test_for_norm.csv")
normality_by <- function(test){
return (aggregate(x~y+z, test_data, function(x){shapiro.test(x)$p.value}))
}
normality_by(test_data)
x = normality_by(test_data)
class(x)
x[2]
x[,2]
x[2,]
normality_by <- function(test){
x <-  aggregate(x~y+z, test_data, function(x){shapiro.test(x)$p.value})
row2 <- x[,2]
x[,2] <- x[,3]
x[,3] <- row2
return(x)
}
x = normality_by(test_data)
x
x[,2]
normality_by <- function(test){
x <-  aggregate(x~y+z, test_data, function(x){shapiro.test(x)$p.value})
row2 <- x[2,]
x[2,] <- x[3,]
x[3,] <- row2
return(x)
}
x = normality_by(test_data)
x]
x
normality_by <- function(test){
x <-  aggregate(x~y+z, test_data, function(x){shapiro.test(x)$p.value})
row2 <- x[2,]
x[2,] <- x[3,]
x[3,] <- row2
return(x)
}
x = normality_by(test_data)
x
normality_by <- function(test){
x <-  aggregate(x~y+z, test_data, function(x){shapiro.test(x)$p.value})
row2 <- x[2,]
x[2,] <- x[3,]
x[3,] <- row2
names(x[3]) <- 'p_value'
return(x)
}
x = normality_by(test_data)
x
normality_by <- function(test){
x <-  aggregate(x~y+z, test_data, function(x){shapiro.test(x)$p.value})
row2 <- x[2,]
x[2,] <- x[3,]
x[3,] <- row2
name(x[3]) <- 'p_value'
return(x)
}
x = normality_by(test_data)
x
normality_by <- function(test){
x <-  aggregate(x~y+z, test_data, function(x){shapiro.test(x)$p.value})
row2 <- x[2,]
x[2,] <- x[3,]
x[3,] <- row2
return(x)
}
x = normality_by(test_data)
x
colnames(x)
y <- colnames(x)
y
y[3] <- 'test'
y
normality_by <- function(test){
x <-  aggregate(x~y+z, test_data, function(x){shapiro.test(x)$p.value})
row2 <- x[2,]
x[2,] <- x[3,]
x[3,] <- row2
colnames(x)[3] <- 'p_value'
return(x)
}
x = normality_by(test_data)
x
View(test_data)
normality_by <- function(test){
x <-  aggregate(x~y+z, test, function(x){shapiro.test(x)$p.value})
row2 <- x[2,]
x[2,] <- x[3,]
x[3,] <- row2
colnames(x)[3] <- 'p_value'
return(x)
}
x = normality_by(test_data)
x
#================
# 2.8.9
library(ggplot2)
test_data <- Iris
test_data <- iris
iris
ggplot(iris, aes(Sepal.Length ~ Species))
ggplot(iris, aes(Sepal.Length))
ggplot(iris, aes(Sepal.Length))+
geom_density()
ggplot(iris, aes(Sepal.Length))+
geom_density(fill = Species)
ggplot(iris, aes(Sepal.Length))+
geom_density()
ggplot(iris, aes(Sepal.Length, Species))+
geom_density()
ggplot(iris, aes(Sepal.Length))+
geom_density(aes(fill=factor(Species)))
ggplot(iris, aes(Sepal.Length))+
geom_density(aes(fill=factor(Species)), alpha=0.5)
ggplot(iris, aes(Sepal.Length,fill=factor(Species)))+
geom_density(aes(), alpha=0.5)
ggplot(iris, aes(Sepal.Length,fill=factor(Species)))+
geom_density(aes(), alpha=0.5)
ggplot(iris, aes(Sepal.Length,fill=factor(Species)))+
geom_density( alpha=0.5)
ggplot(iris, aes(Sepal.Length,fill=factor(Species), alpha=0.5))+
geom_density( )

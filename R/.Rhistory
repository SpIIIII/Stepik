?AirPassengers
str(AirPassengers)
air_pas <- AirPassengers
str(air_pas)
head(air_pas)
air_pas
types(AirPassengers)
typeoff(AirPassengers)
typeof(AirPassengers)
print(i)
for (i in AirPassengers)
for (i in AirPassengers)
for (i in AirPassengers)
for (i in AirPassengers){
print(i)}
for (i in AirPassengers)
print(i)
for (i in 2:lenght(AirPassengers))
if (AirPassengers[i-1]<AirPassengers[i])
result<-AirPassengers[i]
for (i in 2:length(AirPassengers))
if (AirPassengers[i-1]<AirPassengers[i])
result<-AirPassengers[i]
for (i in 2:length(AirPassengers))
if (AirPassengers[i-1]<AirPassengers[i])
result<-c(result,AirPassengers[i])
HairEyeColor
HairEyeColor['Female']
HairEyeColor['Eye']
HairEyeColor[,,'Eye']
HairEyeColor[,,]
HairEyeColor['Female',,]
HairEyeColor[,"Brown",]
HairEyeColor["Female","Brown",]
HairEyeColor[,"Brown","Hair"]
HairEyeColor["Sex","Brown",]
HairEyeColor["Male","Brown",]
HairEyeColor[,"Brown","Male"]
HairEyeColor["","Brown","Female"]
HairEyeColor["","Brown","Male"]
HairEyeColor["Brown","Female"]
HairEyeColor[,"Brown","Female"]
HairEyeColor[,,"Female"]
HairEyeColor[,"Brown","Female"]
chisq.test(HairEyeColor[,"Brown","Female"])
chisq.test(HairEyeColor["Brown",,"Female"])
diamonds
library(ggplot2)
diamonds
# 2.3.5 Диспрсионный анализ
read.csv('shops.csv')
setwd('~/Programming/Stepik/R')
# 2.3.5 Диспрсионный анализ
read.csv('shops.csv')
# 2.3.5 Диспрсионный анализ
shops_ds <- read.csv('shops.csv')
boxblot(price~origin,data = shops_ds)
boxplot(price~origin,data = shops_ds)
ggplot(shops_ds,aes(x = origin, y = price))+
geom_boxplot()
ggplot(shops_ds,aes(x = origin, y = price))+
geom_boxplot()
library(ggplot2)
ggplot(shops_ds,aes(x = origin, y = price))+
geom_boxplot()
ggplot(shops_ds,aes(x = origin, y = price))+
geom_point()
ggplot(shops_ds,aes(x = origin, y = price))+
geom_density()
ggplot(shops_ds,aes(x = origin, y = price))+
geom_boxplot()
summary(fit)
fit <- aov(price ~ origin, data = shops_ds)
summary(fit)
fig
fit
summary(fit)
# 2.3.6
fit <- aov(price ~ origin + stor, shops_ds)
summary(fit)
# 2.3.6
fit <- aov(price ~ origin + store, shops_ds)
summary(fit)
summary(fit)
ggplot(shops_ds, aes(x = shope, y = price))+
geom_botplot()
ggplot(shops_ds, aes(x = shope, y = price))+
geom_boxplot()
ggplot(shops_ds, aes(x = store, y = price))+
geom_boxplot()
model.tables(fit,"means")
summary(shops_ds$price ~ shops_ds$store)
mean(shops_ds$price ~ shops_ds$store)
describe(shops_ds$price ~ shops_ds$store)
describe(iris[iris$Species %in% "virginica",] )
library(psych)
describe(shops_ds$price ~ shops_ds$store)
fig
fit
summary(fit)
describe(shops_ds$price[shops_ds$store == 'minimarket'])
describe(shops_ds$price[shops_ds$store == 'supermarket'])
model.tables(fit,"means")
# 2.3.7
pd = position_dodge(0.1)
ggplot(mydata, aes(x = store, y = price, color = origin, group = origin))+
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.2, lwd = 0.8, position = pd)+
stat_summary(fun.data = mean_cl_boot, geom = "line", size = 1.5, position = pd)+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size= 5, position = pd, pch = 15)+
theme_bw()
ggplot(shops_ds, aes(x = store, y = price, color = origin, group = origin))+
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.2, lwd = 0.8, position = pd)+
stat_summary(fun.data = mean_cl_boot, geom = "line", size = 1.5, position = pd)+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size= 5, position = pd, pch = 15)+
theme_bw()
fit3 <- aov(price ~ origin + stor + origin:store, shops_ds)
summary(fit3)
fit3 <- aov(price ~ origin + stor + origin:store, shops_ds)
fit3 <- aov(price ~ origin + storr + origin:store, shops_ds)
summary(fit3)
fit3 <- aov(price ~ origin + store + origin:store, shops_ds)
summary(fit3)
summary(fit4)
fit4 <- aov(price ~ origin * store, shops_ds)
summary(fit4)
#2.2.8
npk
#2.2.8
p_to_n <- aov(yield~N*P, npk)
summary(p_to_n)
p_to_n
#2.2.8
p_to_n <- aov(yield~N*P*K, npk)
p_to_n
summary(p_to_n)
#2.2.8
p_to_n <- aov(yield~(N+P+K)^3, npk)
summary(p_to_n)
#2.2.8
p_to_n <- aov(yield~(N+P+K)^2, npk)
summary(p_to_n)
#2.2.10
ggplot(shops_ds, aes(x = food, y= price))+
geom_boxplot()
summary(fit5)
fit5 <- aov (price ~ food, shops_ds)
summary(fit5)
TukeyHSD(fit5)
# 2.3.11
iris
# 2.3.11
iris_aov <- aov(Sepal.Width ~ Species,iris)
TukeyHSD(iris_aov)
ggplot(iris, aes(x = Species, y = Sepal.Width))+
geom_boxplot()
# 2.3.12
read.csv("therapy_data.csv")
# 2.3.12
therapy_db <- read.csv("therapy_data.csv")
str(therapy_db)
?therapy_db
therapy_db$subject <- as.factor(therapy_db$subject)
summary(therapy_db)
str(therapy_db)
fit1 <- aov(well_being ~ theraty, therapy_db)
summary(fit1)
fit1 <- aov(well_being ~ therapy, therapy_db)
summary(fit1)
TukeyHSD(fit1)
fit1_er <- aov(well_being ~ therapy + Error(subject/therapy), therapy_db)
summaray(fit1_er)
summary(fit1_er)
summary(fit2)
fit2 <- aov(well_being ~ theraty*price, therapy_db)
summary(fit2)
fit2 <- aov(well_being ~ therapy*price, therapy_db)
summary(fit2)
ggplot(therapy_db, aes(x = therapy, y = price))+
geom_boxplot()
ggplot(therapy_db, aes(x = well_being, y = price))+
geom_boxplot()
ggplot(therapy_db, aes(x = well_being, y = therapy))+
geom_boxplot()
ggplot(therapy_db, aes(x = price, y = well_being))+
geom_boxplot()
ggplot(therapy_db, aes(x = therapy, y = well_being))+
geom_boxplot()
fit2_er <- aov(well_being ~ therapy*price + Error(subject/(therapy*price)))
fit2_er <- aov(well_being ~ therapy*price + Error(subject/(therapy*price)),therapy_db)
summary(fit2_er)
fit2_er <- aov(well_being ~ therapy*price + Error(subject/(therapy*price)),therapy_db)
summary(fit2_er)
ggplot(therapy_db, aes(x = therapy, y = well_being))+
geom_boxplot()+
facet_grid(~subject)
ggplot(therapy_db, aes(x = price, y = well_being))+
geom_boxplot()+
facet_grid(~subject)
#  2.3.13
tabletki <- read.csv("Pilulkin.csv")
#  2.3.13
tabletki <- read.csv("Pillulkin.csv")
str(tabletki)
tabletki$patient <- as.factor(tabletki$patient)
fit <- aov(temprature ~ pill + Error(patien/pill), tabletki)
fit <- aov(temperature ~ pill + Error(patien/pill), tabletki)
fit <- aov(temperature ~ pill + Error(patient/pill), tabletki)
summary (fit)
TukeyHSD(fit)
fit <- aov(tempreture ~ pill*doctor + Error(patient/(pill*doctor)), tabletki)
fit <- aov(temperature ~ pill*doctor + Error(patient/(pill*doctor)), tabletki)
summary(fit)
# 2.3.15
obj <- ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
obj
ggplot(shops_ds, aes(x = store, y = price, color = origin, group = origin))+
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.2, lwd = 0.8, position = pd)+
stat_summary(fun.data = mean_cl_boot, geom = "line", size = 1.5, position = pd)+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size= 5, position = pd, pch = 15)+
theme_bw()
# 2.3.15
obj <- ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = pd)
obj
?geom
??geom
# 2.3.15
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = pd)
# 2.3.15
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = pd)
# 2.3.15
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = pd)
# 2.3.15
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
# 2.3.15
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
# 2.3.15
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))
# 2.3.15
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))
# 2.3.15
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))
# 2.3.15
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
geom_errorbar()
# 2.3.15
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
geom_boxplot()
# 2.3.15
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = pd)
# 2.3.15
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
# 2.3.15
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
geom_line()
# 2.3.15
ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp, group = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
return(s)
s <- x + y
# 2.4.3
my_calc <- function(x,y){
s <- x + y
return(s)
}
my_calc(x = 5,10)
# 2.4.3
my_calc <- function(x,y){
s <- x + y
}
my_calc(x = 5,10)
s
# 2.4.3
my_calc <- function(x,y){
s <- x + y
d <- x - y
return (c(s,d))
}
my_calc(x = 5,10)
# 2.4.4
distr1 <- rnorm(100)
str(distr1)
distr1[1]
ggplot(distr1,aes(x = distr1))+
GeomDensity
ggplot(distr1,aes(x = distr1))+
geom_density()
density(distr1)
plot(distr1)
hist(distr1)
distr1[1:30] <- NA
distr1[is.na]
distr1[is.na(distr1)]
distr1[is.na(distr1)] <- mean(distr1, na.rm = T)
distr1
hist(distr1)
my_na_rm <- findFunction(x){
x[is.na(x)] <- mean(x, na.rm = T)
return(x)
}
my_na_rm <- findFunction(x){
x[is.na(x)] <- mean(x, na.rm = T)
return(x)
}
my_na_rm <- function(x){
x[is.na(x)] <- mean(x, na.rm = T)
return(x)
}
# 2.4.4
distr1 <- rnorm(100)
distr1[1:30] <- NA
my_na_rm(distr1)
distr1 <- my_na_rm(distr1)
source("my_calc_func.R")
View(my_calc)
View(my_na_rm)
View(my_calc)
my_calc(1,2)
# 2.4.7
d <- rnorm(10)
d
d[1:3] <- NA
d
is.na(d)
which(is.na(d))
which(d)
which(T)
which(T,T,F)
which(c(T,T,F))
sum(is.na(d))
# 2.4.9
dir()
# 2.4.9
dir(pattern = "*.csv")
grants <- data.frame()
for (i in dir(pattern = "*.csv")){
temp_df <- read.csv(i)
grants <- rbind (temp_df, grants)
}
read_data <- function(){
df <- data.frame()
for (i in dir(pattern = "*.csv")){
temp_df <- read.csv(i)
df <- rbind (temp_df, df)
}
return (df)
}
print(paste(as.character(number),"files were combined"))
read_data <- function(){
df <- data.frame()
n <- 0
for (i in dir(pattern = "*.csv")){
temp_df <- read.csv(i)
df <- rbind (temp_df, df)
n <- n+1
}
print(paste(as.character(number),"files were combined"))
return (df)
}
x = rnorm(10)
x[1:3] <- NA
is.na(x)
not is.na(x)
! is.na(x)
x[! is.na(x)]
x[! is.na(x)]>0
x[x[! is.na(x)]>0]
sum(x[x[! is.na(x)]>0])
sum(x[x[! is.na(x)]>0], na.rm=T)
x <- c(-3, 10, NA, -1, 1, 0, 4, -3, 2, -2, -3, 3, -3, 0)
sum(x[x[! is.na(x)]>0], na.rm=T)
x
sum(x[x[! is.na(x)]>0], na.rm=T)
x[! is.na(x)]>0]
x[! is.na(x)]>0
x[! is.na(x)]
sum(x[x[x>0], na.rm=T)
NA > 0
x>0
x[x>0]
sum(x[x>0],na.rm=T)
# 2.4.11
x <- c(-0.87, 1, -9.77, 0.06, 0.38, -0.12, 0.59, -3.11, 24.56, -0.53,
1.48, 13.03, -41.17, 5.46, 1.98, 102.76, -3.5, 1.38, -0.12, -0.86,
0.61, 1.6, -0.85, 0.88, 0.36, -0.19, 0.22, 1.26, 1.75, -2.83)
x
boxplot(x)
boxplot(x,weight = 0.2)
boxplot(x,weight = 0.2)
boxplot(x,weight = 0.1)
boxplot(x,weight = 1)
boxplot(x)
IQE(x)
IQR(x)
quantile(x, probs = c(0.25, 0.75))
x[x>qn[2]+1.5*iq | x<qn[1]+1.5*iq]
iq = IQR(x)
qn = quantile(x, probs = c(0.25, 0.75))
iq = IQR(x)
x[x>qn[2]+1.5*iq | x<qn[1]+1.5*iq]
x>qn[2]+1.5*iq | x<qn[1]+1.5*iq
x>qn[2]+1.5*iq
x<qn[1]+1.5*iq
x<qn[1]-1.5*iq
x>qn[2]+1.5*iq | x<qn[1]-1.5*iq
x[x>qn[2]+1.5*iq | x<qn[1]-1.5*iq]
which(x[x>qn[2]+1.5*iq | x<qn[1]-1.5*iq])
which(x>qn[2]+1.5*iq | x<qn[1]-1.5*iq)
x[! x>qn[2]+1.5*iq | x<qn[1]-1.5*iq]
# example of solve
q <- quantile(x, 0.25) + quantile(x, 0.75)
(x[abs(x - q/2) <= 2*IQR(x)])
# 2.4.11
x <- c(-0.87, 1, -9.77, 0.06, 0.38, -0.12, 0.59, -3.11, 24.56, -0.53,
1.48, 13.03, -41.17, 5.46, 1.98, 102.76, -3.5, 1.38, -0.12, -0.86,
0.61, 1.6, -0.85, 0.88, 0.36, -0.19, 0.22, 1.26, 1.75, -2.83)
qn = quantile(x, probs = c(0.25, 0.75))
iq = IQR(x)
x[! x>qn[2]+1.5*iq | x<qn[1]-1.5*iq]
# 2.4.11
x <- c(-0.87, 1, -9.77, 0.06, 0.38, -0.12, 0.59, -3.11, 24.56, -0.53,
1.48, 13.03, -41.17, 5.46, 1.98, 102.76, -3.5, 1.38, -0.12, -0.86,
0.61, 1.6, -0.85, 0.88, 0.36, -0.19, 0.22, 1.26, 1.75, -2.83)
# example of solve
q <- quantile(x, 0.25) + quantile(x, 0.75)
(x[abs(x - q/2) <= 2*IQR(x)])
x[! x<qn[2]+1.5*iq & x>qn[1]-1.5*iq]
# 2.4.11
x <- c(-0.87, 1, -9.77, 0.06, 0.38, -0.12, 0.59, -3.11, 24.56, -0.53,
1.48, 13.03, -41.17, 5.46, 1.98, 102.76, -3.5, 1.38, -0.12, -0.86,
0.61, 1.6, -0.85, 0.88, 0.36, -0.19, 0.22, 1.26, 1.75, -2.83)
qn = quantile(x, probs = c(0.25, 0.75))
iq = IQR(x)
x[! x<qn[2]+1.5*iq & x>qn[1]-1.5*iq]
x[ x<qn[2]+1.5*iq & x>qn[1]-1.5*iq]
(x[abs(x - q/2) <= 2*IQR(x)])
q
quantile(x, 0.25)
quantile(x, 0.75)
mean(x)
q
x - q/2
abs(x - q/2)
[abs(x - q/2) <= 2*IQR(x)]
abs(x - q/2) <= 2*IQR(x)

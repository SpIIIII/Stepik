?AirPassengers
str(AirPassengers)
air_pas <- AirPassengers
str(air_pas)
head(air_pas)
air_pas
types(AirPassengers)
typeoff(AirPassengers)
typeof(AirPassengers)
print(i)
for (i in AirPassengers)
for (i in AirPassengers)
for (i in AirPassengers)
for (i in AirPassengers){
print(i)}
for (i in AirPassengers)
print(i)
for (i in 2:lenght(AirPassengers))
if (AirPassengers[i-1]<AirPassengers[i])
result<-AirPassengers[i]
for (i in 2:length(AirPassengers))
if (AirPassengers[i-1]<AirPassengers[i])
result<-AirPassengers[i]
for (i in 2:length(AirPassengers))
if (AirPassengers[i-1]<AirPassengers[i])
result<-c(result,AirPassengers[i])
HairEyeColor
HairEyeColor['Female']
HairEyeColor['Eye']
HairEyeColor[,,'Eye']
HairEyeColor[,,]
HairEyeColor['Female',,]
HairEyeColor[,"Brown",]
HairEyeColor["Female","Brown",]
HairEyeColor[,"Brown","Hair"]
HairEyeColor["Sex","Brown",]
HairEyeColor["Male","Brown",]
HairEyeColor[,"Brown","Male"]
HairEyeColor["","Brown","Female"]
HairEyeColor["","Brown","Male"]
HairEyeColor["Brown","Female"]
HairEyeColor[,"Brown","Female"]
HairEyeColor[,,"Female"]
HairEyeColor[,"Brown","Female"]
chisq.test(HairEyeColor[,"Brown","Female"])
chisq.test(HairEyeColor["Brown",,"Female"])
diamonds
library(ggplot2)
diamonds
cor.test(x = df$mpg, y = df$hp )
#  3.1.2
df <- mtcars
cor.test(x = df$mpg, y = df$hp )
setwd('~/Programming/Stepik/R')
library(ggplot2)
library(psych)
mtcars$wt
x <- mtcars$wt
summarty(x)
summary(x)
summary(scale(x))
hist(x)
hist(scale(x))
plot(x)
plot(scale(x))
plot(x)
plot(scale(x))
plot(x)
plot(scale(x))
plot(x,scale(x))
plot(c(x,scale(x)))
?scale
x <- mtcars[,c(wt,mpg)]
x <- mtcars[,c('wt','mpg')]
plot(c(x,scale(x)))
plot(x)
scale(x)
plot(scale(x)
plot(scale(x))
plot(scale(x))
x <- mtcars[,c('wt','mpg')]
x <- scale(x)
lm(x$1 ~ x$2,x)
lm(x$1 ~ x$2,x)
lm(x$1, x$2,x)
?lm
lm(x$1 ~ x$2,data = x)
x$1
x <- mtcars[,c('wt','mpg')]
x <- scale(x)
x
lm(wt ~ mpg,data = x)
x <- mtcars[,c('wt','mpg')]
typeof(x)
x
# 3.4.7
beta.coef <- function(x){
x$1 <- scale(x$1)
x$2 <- scale(x$2)
}
# 3.4.7
beta.coef <- function(x){
x[,1] <- scale(x[,1])
x[,1] <- scale(x[,2])
lm(x[,1] ~ x[,2],x)
}
beta.coef(swiss[,c(1,4)])
# 3.4.7
beta.coef <- function(x){
x[,1] <- scale(x[,1])
x[,1] <- scale(x[,2])
fit <- lm(x[,1] ~ x[,2],x)
return (fit)
}
beta.coef(swiss[,c(1,4)])
summary(beta.coef(swiss[,c(1,4)]))
# 3.4.7
beta.coef <- function(x){
x[,1] <- scale(x[,1])
x[,1] <- scale(x[,2])
fit <- lm(x[,1] ~ x[,2],x)
return (fit)
}
summary(beta.coef(swiss[,c(1,4)]))
str(beta.coef(swiss[,c(1,4)]))
?scale
summary(beta.coef(swiss[,c(1,4)]))
# 3.4.7
beta.coef <- function(x){
x[,1] <- scale(x[,1])
x[,1] <- scale(x[,2])
fit <- lm(x[,1] ~ x[,2],x)
return (summary(fit)$coefficients)
}
summary(beta.coef(swiss[,c(1,4)]))
return (summary(fit)$coefficients)
# 3.4.7
beta.coef <- function(x){
x[,1] <- scale(x[,1])
x[,1] <- scale(x[,2])
fit <- lm(x[,1] ~ x[,2],x)
return (summary(fit)$coefficients)
}
beta.coef(swiss[,c(1,4)])
# 3.4.7
beta.coef <- function(x){
x[,1] <- scale(x[,1])
x[,1] <- scale(x[,2])
fit <- lm(x[,1] ~ x[,2],x)
return (summary(fit)$coefficients$estimate)
}
beta.coef(swiss[,c(1,4)])
# 3.4.7
beta.coef <- function(x){
x[,1] <- scale(x[,1])
x[,1] <- scale(x[,2])
fit <- lm(x[,1] ~ x[,2],x)
return (summary(fit)$estimate)
}
beta.coef(swiss[,c(1,4)])
str(beta.coef(swiss[,c(1,4)]))
# 3.4.7
beta.coef <- function(x){
x[,1] <- scale(x[,1])
x[,1] <- scale(x[,2])
fit <- lm(x[,1] ~ x[,2],x)
return (summary(fit)$coefficients)
}
str(beta.coef(swiss[,c(1,4)]))
beta.coef(swiss[,c(1,4)])[1:4]
beta.coef(swiss[,c(1,4)])[1:2]
beta.coef(swiss[,c(1,4)])[:]
beta.coef(swiss[,c(1,4)])[:]
beta.coef(swiss[,c(1,4)])[,]
beta.coef(swiss[,c(1,4)])[1,]
beta.coef(swiss[,c(1,4)])[,1]
# 3.4.7
beta.coef <- function(x){
x[,1] <- scale(x[,1])
x[,1] <- scale(x[,2])
fit <- lm(x[,1] ~ x[,2],x)
return (summary(fit)$coefficients[,1])
}
beta.coef(swiss[,c(1,4)])
# 3.4.7
test_data <- as.data.frame(list(x1 = c(10, 10, 9, 11, 10, 11, 5, 8, 10, 8, 8, 12, 12, 8, 11, 11, 10, 11, 6, 8, 12, 11,
11, 12, 12, 6, 9, 11, 14, 12), y1 = c(13, 10, 9, 12, 13, 4, 16, 15, 11, 15, 17,
14, 15, 9, 11, 7, 7, 14, 13, 17, 15, 14,
8, 9, 17, 12, 17, 12, 15, 14)))
beta.coef(test_data)
# 3.4.7
test_data <- as.data.frame(list(x1 = c(10, 10, 9, 11, 10, 11, 5, 8, 10, 8, 8, 12, 12, 8, 11, 11, 10, 11, 6, 8, 12, 11, 11, 12, 12, 6, 9, 11, 14, 12),
y1 = c(13, 10, 9, 12, 13, 4, 16, 15, 11, 15, 17, 14, 15, 9, 11, 7, 7, 14, 13, 17, 15, 14, 8, 9, 17, 12, 17, 12, 15, 14)))
beta.coef <- function(x){
x[,1] <- scale(x[,1])
x[,1] <- scale(x[,2])
fit <- lm(x[,1] ~ x[,2],x)
return (summary(fit)$coefficients[,1])
}
beta.coef <- function(x){
x[,1] <- scale(x[,1])
x[,1] <- scale(x[,2])
fit <- lm(x[,1] ~ x[,2],x)
return (summary(fit))
}
beta.coef(test_data)
beta.coef <- function(x){
# x[,1] <- scale(x[,1])
#x[,1] <- scale(x[,2])
fit <- lm(x[,1] ~ x[,2],x)
return (summary(fit))
}
beta.coef(test_data)
beta.coef <- function(x){
y <- scale(x)
fit <- lm(x[,1] ~ x[,2],x)
return (summary(fit))
}
beta.coef(test_data)
beta.coef <- function(x){
y <- scale(x)
fit <- lm(y[,1] ~ y[,2],y)
return (summary(fit))
}
beta.coef(test_data)
beta.coef <- function(x){
y <- scale(x)
fit <- lm(y[,1] ~ y[,2],data.frame(y))
return (summary(fit))
}
beta.coef(test_data)
beta.coef <- function(x){
y <- scale(x)
fit <- lm(y[,1] ~ y[,2],data.frame(y))
return (summary(fit)$coefficients[,1])
}
beta.coef(test_data)

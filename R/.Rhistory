?AirPassengers
str(AirPassengers)
air_pas <- AirPassengers
str(air_pas)
head(air_pas)
air_pas
types(AirPassengers)
typeoff(AirPassengers)
typeof(AirPassengers)
print(i)
for (i in AirPassengers)
for (i in AirPassengers)
for (i in AirPassengers)
for (i in AirPassengers){
print(i)}
for (i in AirPassengers)
print(i)
for (i in 2:lenght(AirPassengers))
if (AirPassengers[i-1]<AirPassengers[i])
result<-AirPassengers[i]
for (i in 2:length(AirPassengers))
if (AirPassengers[i-1]<AirPassengers[i])
result<-AirPassengers[i]
for (i in 2:length(AirPassengers))
if (AirPassengers[i-1]<AirPassengers[i])
result<-c(result,AirPassengers[i])
HairEyeColor
HairEyeColor['Female']
HairEyeColor['Eye']
HairEyeColor[,,'Eye']
HairEyeColor[,,]
HairEyeColor['Female',,]
HairEyeColor[,"Brown",]
HairEyeColor["Female","Brown",]
HairEyeColor[,"Brown","Hair"]
HairEyeColor["Sex","Brown",]
HairEyeColor["Male","Brown",]
HairEyeColor[,"Brown","Male"]
HairEyeColor["","Brown","Female"]
HairEyeColor["","Brown","Male"]
HairEyeColor["Brown","Female"]
HairEyeColor[,"Brown","Female"]
HairEyeColor[,,"Female"]
HairEyeColor[,"Brown","Female"]
chisq.test(HairEyeColor[,"Brown","Female"])
chisq.test(HairEyeColor["Brown",,"Female"])
diamonds
library(ggplot2)
diamonds
cor.test(x = df$mpg, y = df$hp )
#  3.1.2
df <- mtcars
cor.test(x = df$mpg, y = df$hp )
setwd('~/Programming/Stepik/R')
library(ggplot2)
library(psych)
library(gvlma)
mean(my_df$correct)
# 3.6.7 - 3.6.8
library(ROCR)
pred_fit <- prediction(my_df$prob,my_df$hon)
perf_fit <- performance(pred_fit, 'tpr', 'fpr')
# 3.6.3 - 3.6.4
my_df <- read.csv('train.csv', sep = ';')
str(my_df)
ggplot(my_df, aes(read, math, col = gender))+
geom_point()+
facet_grid(.~hon)+
theme(axis.text = element_text(size = 25),
axis.title=element_text(size=25, face = 'bold'))
fit <- glm(hon~ read+math+gender, my_df, family = "binomial")
summary(fit)
head(predict(object = fit, type = 'response'))
my_df$prob <- predict(object = fit, type = 'response')
# 3.6.5
log_coef <- glm(am~disp+vs+mpg, mtcars,family = "binomial")
log_coef$coefficients
# 3.6.6
ggplot(data = ToothGrowth, aes(x = supp, y = len, fill = factor(dose)))+
geom_boxplot()
# 3.6.7 - 3.6.8
library(ROCR)
pred_fit <- prediction(my_df$prob,my_df$hon)
perf_fit <- performance(pred_fit, 'tpr', 'fpr')
plot(perf_fit, colorize =T, print.cutoffs.at = seq(0,1,by=0.1))
auc <- performance(pred_fit, measure = 'auc')
str(auc)
perf3 <- performance(pred_fit, x.measure = 'cutoff', measure = 'spec')
perf4 <- performance(pred_fit, x.measure = 'cutoff', measure = 'sens')
perf5 <- performance(pred_fit, x.measure = 'cutoff', measure = 'acc')
plot(perf3, col = 'red',lwd =2)
plot(add=T, perf4, col = 'green',lwd =2)
plot(add = T, perf5, lwd=2)
abline (v=0.225, lwd =2)
my_df$pred_resp <- factor(ifelse(my_df$prob > 0.225, 1, 0),labels = c('N','Y'))
my_df$correct <- ifelse(my_df$pred_resp == my_df$hon,1,0)
ggplot(my_df, aes(prob, fill = factor(correct)))+
geom_boxplot()+
theme(axis.text = element_text(size=25),
axis.title=element_text(size=25,face='bold'))
mean(my_df$correct)
mean(my_df$correct)
test_df <- read.csv('test.csv',sep = ';')
test_df$hon <- NA
test_df$hon <- predict(fit, newdata = test_df, type = 'response')
View(test_df)
View(test_df)
View(test_df)
# 3.6.9
data <- read.csv('date.csv')
setwd('~/Programming/Stepik/R')
# 3.6.9
data <- read.csv('date.csv')
# 3.6.9
data <- read.csv('data.csv')
str(data)
fit <- glm(admin ~ gre*gpa*rank, data, family = "binomial")
fit <- glm(admit ~ gre*gpa*rank, data, family = "binomial")
summary(fit)
data_na <- data[data$admit == NA]
data_na <- subset(data,admit =NA)
data_na
data_na <- subset(data,admit ==NA)
data_na
data_na <- data[data$admit == NA]
data_na <- data[data$admit = NA]
data_na <- data[data$admit = NA]
data$admit ]
data$admit
data$admit ==NA
data$admit is NA
data$admit !=1
subset(data, na.rm = T)
data
subset(data, na.rm = T)
na.omit(data)
data_na <- na.omit(data)
data_na
data_na <- data[is.na(data$admit)]
data_na
data_na <- data[is.na(data$admit),]
data_na
data_na$admit < predict(fit,data_na,type = 'response')
data_na$admit <- predict(fit,data_na,type = 'response')
data_na
sum(data_na[data_na$admit > 0.4])
data_na$admit > 0.4
sum(data_na[data_na$admit > 0.4,])
count(data_na[data_na$admit > 0.4,])
data_na[data_na$admit > 0.4,]
nrow(data_na[data_na$admit > 0.4,])
data_na$admit <- predict(fit,data_na[,c(2,3,4)],type = 'response')
nrow(data_na[data_na$admit > 0.4,])
# 3.6.9
data <- read.csv('data.csv')
fit <- glm(admit ~ gpa*rank, data, family = "binomial")
data_na <- data[is.na(data$admit),]
data_na$admit <- predict(fit,data_na[,c(2,3,4)],type = 'response')
nrow(data_na[data_na$admit > 0.4,])
# 3.7.2
install.packages('xtable')
install.packages('stargazer')
library(xtable)
library(stargazer)
fit1 <- lm(mpg ~ cyl + disp, mtcars)
fit2 <- aov(mpg ~ am * vs,mtcars)
summary(fit1)
fit_table1 <- xtable(fit1)
fit_table2 <- xtable(fit2)
print(fit_table1, type='html', file = 'fit_table1.html')
print(fit_table2, type = 'html', file = 'fit_table2.html')
stargazer(fit1, type = 'html', dep.var.labels = 'mpg',
covariate.labels = c('cyl','disp'),out = 'models1.html')
